services:

  postgres_test:
    image: postgres:17
    container_name: postgres_test
    restart: always
    volumes:
      - postgres_test_value:/var/lib/postgresql/data/
    env_file:
      - .env
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  tasks_service:
    image: tasks_service
    build: .
    container_name: tasks_service
    restart: always
    env_file:
      - .env
    ports:
      - 7557
    depends_on:
      postgres_test:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  sync_worker_cpu_fast:
    image: sync_worker
    build: 
      context: .
      dockerfile: src/sync_worker/Dockerfile
    container_name: sync_worker_cpu_fast
    restart: always
    env_file:
      - .env
    command: ["python3", "main.py", "--queue", "CPU_fast"]
    depends_on:
      postgres_test:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      tasks_service:
        condition: service_started

  sync_worker_cpu_normal:
    image: sync_worker
    build: 
      context: .
      dockerfile: src/sync_worker/Dockerfile
    container_name: sync_worker_cpu_normal
    restart: always
    env_file:
      - .env
    command: ["python3", "main.py", "--queue", "CPU_normal"]
    depends_on:
      postgres_test:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      tasks_service:
        condition: service_started

  sync_worker_cpu_slow:
    image: sync_worker
    build: 
      context: .
      dockerfile: src/sync_worker/Dockerfile
    container_name: sync_worker_cpu_slow
    restart: always
    env_file:
      - .env
    command: ["python3", "main.py", "--queue", "CPU_slow"]
    depends_on:
      postgres_test:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      tasks_service:
        condition: service_started

  async_worker_io_fast:
    image: async_worker
    build: 
      context: .
      dockerfile: src/async_worker/Dockerfile
    container_name: async_worker_io_fast
    restart: always
    env_file:
      - .env
    command: ["python3", "main.py", "--queue", "IO_fast"]
    depends_on:
      postgres_test:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      tasks_service:
        condition: service_started

  async_worker_io_normal:
    image: async_worker
    build: 
      context: .
      dockerfile: src/async_worker/Dockerfile
    container_name: async_worker_io_normal
    restart: always
    env_file:
      - .env
    command: ["python3", "main.py", "--queue", "IO_normal"]
    depends_on:
      postgres_test:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      tasks_service:
        condition: service_started

  async_worker_io_slow:
    image: async_worker
    build: 
      context: .
      dockerfile: src/async_worker/Dockerfile
    container_name: async_worker_io_slow
    restart: always
    env_file:
      - .env
    command: ["python3", "main.py", "--queue", "IO_slow"]
    depends_on:
      postgres_test:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      tasks_service:
        condition: service_started

  nginx:
    image: nginx:1.25.3
    container_name: nginx
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs:/etc/nginx/conf.d:ro
    depends_on:
      - postgres_test
      - rabbitmq
      - tasks_service
    ports:
      - 80:80

volumes:
  postgres_test_value:
  rabbitmq_data:
